name: API Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/api/**'
      - '.github/workflows/api-tests.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'apps/api/**'
      - '.github/workflows/api-tests.yml'

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: [3.9, "3.10", "3.11"]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('apps/api/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      working-directory: apps/api
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev]"
    
    - name: Lint with ruff
      working-directory: apps/api
      run: |
        ruff check app tests
        ruff format --check app tests
    
    - name: Type check with mypy
      working-directory: apps/api
      run: |
        mypy app
    
    - name: Test imports and basic functionality
      working-directory: apps/api
      run: |
        python test_simple.py
        python test_endpoints.py
    
    - name: Run unit tests
      working-directory: apps/api
      run: |
        pytest tests/ -v --tb=short
      continue-on-error: true  # Permite que continue mesmo se alguns testes falharem
    
    - name: Generate coverage report
      working-directory: apps/api
      run: |
        pytest tests/ --cov=app --cov-report=xml --cov-report=term
      continue-on-error: true
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: apps/api/coverage.xml
        flags: api
        name: codecov-api
      continue-on-error: true

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    
    - name: Install security tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run security checks
      working-directory: apps/api
      run: |
        bandit -r app -f json -o bandit-report.json || true
        safety check --json --output safety-report.json || true
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      with:
        name: security-reports
        path: |
          apps/api/bandit-report.json
          apps/api/safety-report.json
      continue-on-error: true