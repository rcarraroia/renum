üìÑ Documento T√©cnico ‚Äî M√≥dulo Multiagentes da RENUM
1. Objetivo

Implementar um m√≥dulo de multiagentes na plataforma RENUM, onde um Agente Orquestrador interage com o usu√°rio final, coleta requisitos por meio de entrevista/question√°rio, prop√µe fluxos de automa√ß√£o e conecta subagentes especializados em ferramentas espec√≠ficas (Gmail, Supabase, Meta, CRM, etc.).

O m√≥dulo deve garantir:

Flexibilidade para compor fluxos complexos.

Escalabilidade na adi√ß√£o de novas ferramentas.

Seguran√ßa com BYOC (Bring Your Own Credentials).

Cobran√ßa clara pelo uso de agentes, e n√£o pelas credenciais.

2. Componentes Principais
2.1 Agente Orquestrador

Atua como interface central com o usu√°rio.

Realiza anamnese/entrevista com perguntas progressivas para entender objetivos.

Prop√µe fluxo leg√≠vel com etapas e subagentes necess√°rios.

Explica por que escolheu cada subagente/ferramenta.

Solicita confirma√ß√£o expl√≠cita do usu√°rio antes da execu√ß√£o.

2.2 Subagentes Especializados

Cada subagente √© especializado em uma ferramenta espec√≠fica.

Exemplo: sa-gmail, sa-supabase, sa-meta, sa-tiktok, sa-crm.

Publicados e versionados no painel administrativo da RENUM (RAM).

Incluem manifesto JSON com:

agent_id, version, capabilities, input_schema, policy.

Depend√™ncias de credenciais (ex.: OAuth Gmail, API Key Supabase).

2.3 Cat√°logo de Agentes

Banco interno de subagentes aprovados.

Cada item possui:

Nome, vers√£o, descri√ß√£o.

Capacidades e limites.

Requisitos de credenciais.

Consultado pelo Orquestrador para montar os fluxos.

2.4 BYOC (Bring Your Own Credentials)

Usu√°rios devem conectar suas pr√≥prias credenciais para cada ferramenta.

Suporte inicial: OAuth (Google, Meta), API Keys (Supabase, CRMs).

Regras:

Armazenamento por tenant.

Escopos m√≠nimos para reduzir riscos.

Valida√ß√£o autom√°tica (teste de ping).

Expira√ß√£o monitorada com alertas.

M√∫ltiplas contas por servi√ßo.

2.5 UX para Conex√£o de Ferramentas

Central de Conex√µes com status (Conectado / Expira em X / Erro).

Guias passo-a-passo para cada servi√ßo.

Alertas de credenciais faltantes no momento da execu√ß√£o.

Consentimento de escopos: usu√°rio sabe quais permiss√µes concede.

3. Fluxo do Usu√°rio

Usu√°rio interage com Agente Orquestrador (chat ou question√°rio).

Orquestrador coleta requisitos e gera plano de automa√ß√£o (fluxo).

Orquestrador identifica subagentes necess√°rios.

Sistema verifica se usu√°rio j√° conectou as credenciais exigidas.

Caso n√£o, redireciona para Central de Conex√µes.

Orquestrador apresenta plano final ao usu√°rio ‚Üí usu√°rio confirma.

Fluxo √© executado, logs s√£o gravados e consumo contabilizado.

4. Tratamento de Ferramentas N√£o Suportadas

Quando o usu√°rio solicitar uma ferramenta n√£o existente no cat√°logo:

Resposta Inteligente com Alternativas

Explicar que n√£o h√° suporte direto.

Sugerir alternativas j√° dispon√≠veis.

Fallback API Gen√©rica

Subagente ‚ÄúHTTP Request‚Äù que permite conex√£o manual com APIs p√∫blicas.

Encaminhamento para Roadmap

Pedido √© automaticamente registrado como ‚ÄúNova Integra√ß√£o Solicitada‚Äù.

Integra√ß√£o Tempor√°ria via Conectores (Pipedream/n8n)

Subagente gen√©rico conecta via terceiros, com custo adicional.

Oferta de Desenvolvimento Sob Demanda

Usu√°rio pode solicitar que a RENUM desenvolva integra√ß√£o oficial.

5. Cobran√ßa

Baseada no uso de agentes/subagentes.

M√©tricas poss√≠veis:

Execu√ß√£o de workflow.

N√∫mero de steps/subagentes usados.

Volume de chamadas externas.

Ferramentas (APIs externas) s√£o responsabilidade do usu√°rio.

6. Requisitos T√©cnicos
6.1 Banco de Dados

agents_registry ‚Üí cat√°logo de subagentes.

tenant_connections ‚Üí credenciais por usu√°rio/tenant.

workflows / workflow_runs ‚Üí planos executados e hist√≥rico.

integration_requests ‚Üí pedidos de novas ferramentas.

6.2 API Interna

Endpoint de execu√ß√£o de subagente:

POST /internal/agents/{agent_id}:{version}/execute


Body:

{
  "request_id": "uuid",
  "tenant_id": "tenant-123",
  "action": "send_email",
  "params": { ... },
  "context": { ... },
  "idempotency_key": "uuid"
}

6.3 Seguran√ßa

Criptografia de credenciais em repouso e tr√¢nsito.

Pol√≠ticas de menor privil√©gio (escopos m√≠nimos).

Logs sem dados sens√≠veis (PII mascarada).

Auditoria completa de execu√ß√µes (quem, quando, o qu√™).

6.4 Resili√™ncia

Timeouts, retries e circuit breaker em cada subagente.

Execu√ß√£o simulada (dry-run) antes da produ√ß√£o.

Idempot√™ncia para evitar duplica√ß√µes.

Alertas de falha (ex.: credencial expirada, API fora do ar).

7. Diferenciais Estrat√©gicos

Entrevista conversacional para criar fluxos sem conhecimento t√©cnico.

Explicabilidade: sempre mostra por que subagente foi escolhido.

Biblioteca de casos prontos para acelerar onboarding.

Fallback inteligente para ferramentas n√£o mapeadas.

Modelo de cobran√ßa justo (paga-se pelo uso dos agentes).

8. Roadmap Sugerido

Fase 1 (MVP)

Orquestrador conversacional.

Subagentes: Gmail, Supabase.

BYOC com API Keys.

Execu√ß√£o de fluxos simples.

Fase 2

OAuth (Google, Meta).

Cat√°logo versionado de subagentes.

Fallback API Gen√©rica.

Central de Conex√µes.

Fase 3

Fallback via Pipedream/n8n.

Biblioteca de fluxos prontos.

Pol√≠ticas de billing detalhadas.

Roadmap autom√°tico de novas integra√ß√µes.

9. Crit√©rios de Aceite (DoD)

Usu√°rio consegue criar fluxo b√°sico via Orquestrador.

Usu√°rio conecta suas pr√≥prias credenciais (BYOC).

Fluxo √© validado, executado e logado corretamente.

Subagentes s√≥ funcionam quando credenciais v√°lidas est√£o ativas.

Pedido de ferramenta n√£o mapeada √© tratado (alternativa + registro).

‚úÖ Conclus√£o
O m√≥dulo multiagentes da RENUM permitir√° entregar ao cliente flexibilidade m√°xima e seguran√ßa de credenciais, mantendo a escalabilidade interna da plataforma com subagentes versionados. O modelo garante redu√ß√£o de custos, maior controle e possibilidade de monetiza√ß√£o justa baseada no uso real dos agentes.

Renato, quer que eu j√° prepare tamb√©m um diagrama simplificado (em ASCII ou UML) do fluxo Orquestrador ‚Üí Subagentes ‚Üí Execu√ß√£o, para anexarmos nesse documento t√©cnico?

Dito por si:
sim
Dito pelo ChatGPT:

Perfeito ‚Äî vou acrescentar ao documento t√©cnico um diagrama simplificado do fluxo Orquestrador ‚Üí Subagentes ‚Üí Execu√ß√£o em dois formatos: ASCII (pr√°tico para copiar/colar em qualquer lugar) e Mermaid (se voc√™ for usar em markdown que suporte mermaid, como GitHub/GitLab/MD viewers). Tamb√©m adiciono uma breve legenda para cada componente. Copie o bloco que preferir e cole no documento t√©cnico original.

Diagrama (ASCII ‚Äî pronto para copiar)
                             +-------------------+
                             |     USU√ÅRIO       |
                             | (Chat / Form / UI)|
                             +---------+---------+
                                       |
                                       v
                        +--------------+---------------+
                        |   AGENTE ORQUESTRADOR (AO)   |
                        | - Entrevista / Anamnese      |
                        | - Gera√ß√£o de Plano (JSON)    |
                        | - Valida√ß√£o & Consentimento  |
                        +--------------+---------------+
                                       |
                      +----------------+-------------------+
                      |                                    |
                      v                                    v
           +----------+-----------+              +---------+----------+
           | SubAgent: sa-email    |              | SubAgent: sa-supabase |
           | - capabilities: send  |              | - capabilities: read/write |
           | - auth: tenant gmail  |              | - auth: tenant supabase  |
           +----------+-----------+              +---------+----------+
                      |                                    |
                      v                                    v
                +-----+-----+                      +-------+------+
                | Gmail API |                      | Supabase API |
                +-----------+                      +--------------+

                      (outras branches...)
                      |
    +-----------------+------------------+
    | SubAgent: sa-whatsapp / sa-crm ... |
    +------------------------------------+
                      |
                      v
                External APIs / Services

Diagrama (Mermaid ‚Äî use em Markdown com suporte a mermaid)

```mermaid
flowchart TD
U[Usu√°rio<br/>(Chat / Form / UI)] --> AO[Agente Orquestrador<br/>(Anamnese ‚Üí Plano ‚Üí Consent)]
AO --> SA_Email[SubAgent: sa-email<br/>(send_email)]
AO --> SA_Supabase[SubAgent: sa-supabase<br/>(read/write)]
AO --> SA_Whats[SubAgent: sa-whatsapp<br/>(send_message)]
SA_Email --> GmailAPI[Gmail API / SMTP]
SA_Supabase --> SupabaseAPI[Supabase API]
SA_Whats --> WhatsAPI[WhatsApp API / Provider]
style AO fill:#f9f,stroke:#333,stroke-width:1px
style SA_Email fill:#efe,stroke:#333
style SA_Supabase fill:#efe,stroke:#333
style SA_Whats fill:#efe,stroke:#333
```

Legenda / Notas r√°pidas

Usu√°rio: inicia via chat ou formul√°rio din√¢mico.

Agente Orquestrador (AO): interpreta, decompoe em tarefas, escolhe subagentes no cat√°logo, pede consentimento (se necess√°rio) e executa. Retorna plano e resultados.

SubAgent: encapsula l√≥gica da ferramenta (capabilities, auth, schema). Pode ser s√≠ncrono ou ass√≠ncrono.

APIs Externas: servi√ßos reais (Gmail, Supabase, WhatsApp providers, CRMs).

Observabilidade / Billing (n√£o mostrado no diagrama para manter simplicidade): cada request possui request_id e √© auditado; m√©tricas por agent_id.